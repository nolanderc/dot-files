# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod1
set $super Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Shows a combined list of the applications with desktop files and
# executables from PATH.
# TODO: add window with the next release of rofi-wayland
set $menu fuzzel

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# Requires: desktop-backgrounds-compat, swaybg
output * bg /usr/share/backgrounds/default.png fill

output * max_render_time off
bindsym $super+8 output * max_render_time 2
bindsym $super+9 output * max_render_time 5
bindsym $super+0 output * max_render_time off

output * adaptive_sync on

# Reload kanshi config when sway reloads.
exec kanshi
exec_always pkill kanshi; kanshi

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec_always swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep 'swaylock -f -c 000000'

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "type:keyboard" {
	xkb_layout us(dvorak)
	xkb_options caps:escape
	repeat_rate 40
	repeat_delay 180
}

input "type:touchpad" {
	natural_scroll enabled
}

input "type:pointer" {
	accel_profile flat
}

bindsym $super+1 input "type:keyboard" xkb_layout us
bindsym $super+2 input "type:keyboard" xkb_layout us(dvorak)
bindsym $super+3 input "type:keyboard" xkb_layout se(svdvorak)
bindsym $super+4 input "type:keyboard" xkb_layout se

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec "$HOME/.local/bin/wayland-cwd.sh" foot
    bindsym $mod+t exec "$HOME/.local/bin/wayland-cwd.sh" foot

    # Kill focused window
    bindsym $mod+Shift+w kill

    # Start your launcher
    bindsym $mod+space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    bindsym $mod+Ctrl+$left move left
    bindsym $mod+Ctrl+$down move down
    bindsym $mod+Ctrl+$up move up
    bindsym $mod+Ctrl+$right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Ctrl+1 move container to workspace number 1;  workspace number 1
    bindsym $mod+Ctrl+2 move container to workspace number 2;  workspace number 2
    bindsym $mod+Ctrl+3 move container to workspace number 3;  workspace number 3
    bindsym $mod+Ctrl+4 move container to workspace number 4;  workspace number 4
    bindsym $mod+Ctrl+5 move container to workspace number 5;  workspace number 5
    bindsym $mod+Ctrl+6 move container to workspace number 6;  workspace number 6
    bindsym $mod+Ctrl+7 move container to workspace number 7;  workspace number 7
    bindsym $mod+Ctrl+8 move container to workspace number 8;  workspace number 8
    bindsym $mod+Ctrl+9 move container to workspace number 9;  workspace number 9
    bindsym $mod+Ctrl+0 move container to workspace number 10; workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+d splith
    bindsym $mod+b splitv

    # Switch the current container between different layout styles
    bindsym $mod+Ctrl+s layout stacking
    bindsym $mod+Ctrl+t layout tabbed
    bindsym $mod+Ctrl+e layout toggle split
    bindsym $mod+Ctrl+d layout splith
    bindsym $mod+Ctrl+b layout splitv

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Ctrl+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Shift+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Ctrl+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show


#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 20px
    bindsym $down resize grow height  20px
    bindsym $up resize shrink height  20px
    bindsym $right resize grow width  20px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 20px
    bindsym Down resize grow height  20px
    bindsym Up resize shrink height  20px
    bindsym Right resize grow width  20px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


# Handle power button
set $mode_system System  (l)ock  (e)xit  (s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id systemctl suspend, mode "default"
    bindsym e exec --no-startup-id swaymsg exit, mode "default"
    bindsym s exec --no-startup-id poweroff, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym XF86PowerOff mode "$mode_system"
bindsym $super+l mode "$mode_system"

exec_always xrdb ~/.Xresources

# Hide cursor after inactivity
seat * hide_cursor 3000

titlebar_border_thickness 0
titlebar_padding 5 0
font Comic Code 8

# toggle waybar
# bindsym --no-repeat $mod+o exec killall -SIGUSR1 waybar

bar {
    swaybar_command waybar
    hidden_state hide
    mode hide
    modifier Mod4
}
exec_always killall -SIGUSR1 waybar
exec nm-applet

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'
